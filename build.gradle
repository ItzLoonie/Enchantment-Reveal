buildscript {
    repositories {
        maven { url = 'https://maven.fabricmc.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.fabricmc:fabric-loom:1.2-SNAPSHOT'
    }
}
plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.fabricmc.loom' version '1.2-SNAPSHOT'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // Set Minecraft version and Fabric Loader version
    version = "1.21.3"
    loader = "0.16.9"

    // Fabric uses official mappings
    mappings channel: 'official', version: '1.21.3'
    
    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    copyIdeResources = true
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    maven { url 'https://maven.fabricmc.net/' }
    mavenCentral()
}

dependencies {
    // Specify the version of Minecraft to use with Fabric API
    minecraft "net.fabricmc:fabric-api:${minecraft_version}"

    // Example mod dependency with JEI (if you want to add JEI dependency for Fabric)
    // compileOnly "mezz.jei:jei-${mc_version}-fabric-api:${jei_version}"

    // You can add other dependencies here as needed.
    // Example: compileOnly fg.deobf("com.mojang:minecraft:${mc_version}")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            mod_id: mod_id, 
            mod_name: mod_name, 
            mod_license: mod_license, 
            mod_version: mod_version,
            mod_authors: mod_authors, 
            mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors
        ])
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

eclipse {
    // Run everytime eclipse builds the code
    synchronizationTasks 'genEclipseRuns'
}
